[["datos-de-estudio.html", "Capítulo 2 Datos de estudio 2.1 Registros independientes 2.2 Tasa de registro 2.3 Datos climatológicos", " Capítulo 2 Datos de estudio Se utilizaras los siguientes tipos de datos (se especifica con  “datos listos para usar” y  “datos incompletos o en procesamiento”):  Registros independientes Faltan datos de áreas protegidas y de cámaras  Datos de cada camara trampa Longitud, Latitud, Modelo  Clima Precipitaciones Temperatura Nubosidad  Tasa de registro de: Vacas Perros 2.1 Registros independientes Se utilizan los datos obtenidos de … load(&quot;datos/planilla_general.RData&quot;) 2.1.1 Preparación de datos Se lleva a cabo un proceso de filtrado para retener únicamente los datos relevantes. datos &lt;- datos %&gt;% filter(type == &quot;Mammal&quot;) %&gt;% select(sitio = site, sistema = station, camara = camera, datetime, sp = species) sitio sistema camara datetime sp SM SM06 SM06_3 2023-02-07 07:56:22 Btau SM SM06 SM06_2 2023-02-06 15:05:08 Btau SM SM01 SM01_1 2023-02-06 12:51:12 Oari SM SM01 SM01_1 2023-02-06 12:13:33 Btau SM SM01 SM01_1 2023-02-06 08:07:45 Btau SM SM01 SM01_1 2023-02-05 21:59:46 Btau 2.2 Tasa de registro Se calcularán las tasas de registro por cámara para el ganado vacuno y los perros. Para esto se necesita los días que las cámaras estuvieron activas. 2.3 Datos climatológicos Para esto se probará una base de datos abierta llamada open-meto.com. La misma utiliza “Deutscher Wetter Dienst (DWD), la Administración Nacional Oceánica y Atmosférica (NOAA), Meteo-France y el Centro Meteorológico Canadiense (CMC)”. Se utilice esta opción o la INUMET, el procedimiento luego de tener la base de datos será similar. 2.3.1 Probando open-meteo library(&quot;openmeteo&quot;) Prueba del paquete y la función weather_history: weather_history(c(-34.666311631255184, -56.217928174121674), start = &quot;2020-01-01&quot;, end = &quot;2020-01-05&quot;, daily = c(&quot;wind_speed_10m_max&quot;, &quot;wind_gusts_10m_max&quot;, &quot;wind_speed_10m_mean&quot;, &quot;precipitation_sum&quot;, &quot;precipitation_hours&quot;, &quot;temperature_2m_min&quot;, &quot;temperature_2m_mean&quot;, &quot;temperature_2m_max&quot;, &quot;weather_code&quot;), response_units = list( temperature_unit = &quot;celsius&quot;, windspeed_unit = &quot;kmh&quot;, precipitation_unit = &quot;mm&quot; ), timezone = &quot;America/Montevideo&quot; ) Para ver el significado de “daily_weather_code” se puede acceder aquí. El siguiente paso es obtener las fechas en que se necesitan los datos climáticos. Para esto se extraen las fechas de los registros: # OBS: Laguna De Rocha tiene dos campañas, se podría separar el sitio como LR_A y LR_B. Ahora se elimina LR. fechas_con_registro &lt;- datos %&gt;% select(sitio, datetime) %&gt;% mutate(fecha = as_date(datetime)) %&gt;% select(sitio, fecha) %&gt;% group_by(sitio) %&gt;% summarise(primera_fecha = min(fecha), ultima_fecha = max(fecha)) %&gt;% filter(sitio != &quot;LR&quot;) # Falta latitud y longitud de cada sitio, se agregan en hard coding. fechas_con_registro &lt;- fechas_con_registro %&gt;% add_column(&quot;latitud&quot; = c(-34.37487817037226, -33.93997278713127, -34.776719666347454, -33.966788259313375, -34.78333836597851, -33.710087830803594), &quot;longitud&quot; = c(-53.809678593289696, -53.528272451849645, -54.55898221076165, -53.645583740898076, -55.39359956154083, -53.5664228091683)) kable(fechas_con_registro, booktabs = TRUE) sitio primera_fecha ultima_fecha latitud longitud CP 2022-05-28 2022-07-31 -34.37488 -53.80968 CV 2022-05-01 2022-07-01 -33.93997 -53.52827 LG 2019-07-31 2020-10-30 -34.77672 -54.55898 PT 2022-04-30 2022-07-02 -33.96679 -53.64558 SG 2020-05-29 2020-08-14 -34.78334 -55.39360 SM 2022-12-11 2023-02-07 -33.71009 -53.56642 datos_clima &lt;- tibble(&quot;sitio&quot; = character(), &quot;date&quot; = as.Date(character()), &quot;daily_wind_speed_10m_max&quot; = double(), &quot;daily_wind_gusts_10m_max&quot; = double(), &quot;daily_wind_speed_10m_mean&quot; = double(), &quot;daily_precipitation_sum&quot; = double(), &quot;daily_precipitation_hours&quot; = double(), &quot;daily_temperature_2m_min&quot; = double(), &quot;daily_temperature_2m_mean&quot; = double(), &quot;daily_temperature_2m_max&quot; = double(), &quot;daily_weather_code&quot; = integer()) for (sitio in 1:nrow(fechas_con_registro)) { nombre_sitio &lt;- fechas_con_registro[sitio,]$sitio latitud &lt;- fechas_con_registro[sitio,]$latitud longitud &lt;- fechas_con_registro[sitio,]$longitud primera_fecha &lt;- fechas_con_registro[sitio,]$primera_fecha ultima_fecha &lt;- fechas_con_registro[sitio,]$ultima_fecha datos_clima_sitio &lt;- weather_history(c(latitud, longitud), start = primera_fecha, end = ultima_fecha, daily = c(&quot;wind_speed_10m_max&quot;, &quot;wind_gusts_10m_max&quot;, &quot;wind_speed_10m_mean&quot;, &quot;precipitation_sum&quot;, &quot;precipitation_hours&quot;, &quot;temperature_2m_min&quot;, &quot;temperature_2m_mean&quot;, &quot;temperature_2m_max&quot;, &quot;weather_code&quot;), response_units = list( temperature_unit = &quot;celsius&quot;, windspeed_unit = &quot;kmh&quot;, precipitation_unit = &quot;mm&quot; ), timezone = &quot;America/Montevideo&quot; ) %&gt;% mutate(sitio = nombre_sitio) %&gt;% select(sitio, everything()) datos_clima &lt;- datos_clima %&gt;% add_row(datos_clima_sitio) } save(datos_clima, file=&quot;datos/generados/datos_clima.RData&quot;) load(&quot;datos/generados/datos_clima.RData&quot;) paged_table(datos_clima) ¿Qué códigos de clima aparecieron? datos_clima %&gt;% select(daily_weather_code) %&gt;% distinct() %&gt;% arrange(daily_weather_code) ## # A tibble: 10 × 1 ## daily_weather_code ## &lt;int&gt; ## 1 0 ## 2 1 ## 3 2 ## 4 3 ## 5 51 ## 6 53 ## 7 55 ## 8 61 ## 9 63 ## 10 65 Significado: - 00: Desarrollo de nubes no observado o no observable. - 01: Nubes disolviéndose o volviéndose menos desarrolladas en general. - 02: Estado del cielo en general sin cambios. - 03: Nubes formándose o desarrollándose en general. - 51: Llovizna, no congelante, continua, ligera en el momento de la observación. - 53: Llovizna, no congelante, continua, moderada en el momento de la observación. - 55: Llovizna, no congelante, continua, intensa (densa) en el momento de la observación. - 61: Lluvia, no congelante, intermitente, ligera en el momento de la observación. - 63: Lluvia, no congelante, continua, moderada en el momento de la observación. - 65: Lluvia, no congelante, continua, intensa en el momento de la observación. 2.3.2 Exploración de datos Se intentará visualizar los datos de los registros con alguna de estas variables. registros_por_camara_por_especie_por_dia &lt;- datos %&gt;% mutate(fecha = as_date(datetime)) %&gt;% group_by(sitio, camara, fecha, sp) %&gt;% summarise(registros = n()) datos2 &lt;- datos_clima %&gt;% select(sitio, fecha = date, daily_wind_speed_10m_mean, daily_precipitation_sum, daily_temperature_2m_mean, daily_weather_code) %&gt;% right_join(registros_por_camara_por_especie_por_dia, by = join_by(sitio, fecha)) Graficos: a &lt;- datos_clima %&gt;% mutate(precipitation = case_when( daily_precipitation_sum &lt; 24 ~ &quot;Baja&quot;, daily_precipitation_sum &gt;= 24 | daily_precipitation_sum &lt;= 48 ~ &quot;Media&quot;, daily_precipitation_sum &gt; 48 ~ &quot;Alta&quot;, )) b &lt;- a %&gt;% select(sitio, fecha = date, precipitation) %&gt;% right_join(registros_por_camara_por_especie_por_dia, by = join_by(sitio, fecha)) 2.3.3 Origen y utilidad de los datos De donde vienen los codigos del clima, los datos, etc? es confiable? "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
